name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - 'next/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main]
    paths:
      - 'next/**'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'next/package.json'
          
      - name: Install dependencies
        working-directory: ./next
        run: npm install
        
      - name: Run linting
        working-directory: ./next
        run: npm run lint
        
      - name: Build Next.js app
        working-directory: ./next
        env:
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
          NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
          SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
          NEXT_PUBLIC_SITE_URL: https://thefledgedhurricane.github.io
          NEXT_PUBLIC_SITE_NAME: ${{ secrets.NEXT_PUBLIC_SITE_NAME }}
          NEXT_PUBLIC_SITE_DESCRIPTION: ${{ secrets.NEXT_PUBLIC_SITE_DESCRIPTION }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
          EMAIL_SERVICE_API_KEY: ${{ secrets.EMAIL_SERVICE_API_KEY }}
          NEXT_PUBLIC_GA_ID: ${{ secrets.NEXT_PUBLIC_GA_ID }}
          GITHUB_SHA: ${{ github.sha }}
        run: npm run build
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './next/out'
          
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Lighthouse CI
        if: github.event_name == 'pull_request'
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './next/.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
          
  # Separate job for security scanning
  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: 'next/package.json'
          
      - name: Install dependencies
        working-directory: ./next
        run: npm install
        
      - name: Run security audit
        working-directory: ./next
        run: npm audit --audit-level=high
        
      - name: Check for vulnerabilities
        working-directory: ./next
        run: npx audit-ci --config ./audit-ci.json
        continue-on-error: true